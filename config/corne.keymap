/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
// Layer definitions
#define BASE 0
#define COLEMAKDH 1 
#define NAV 2
#define NUM 3
#define SYM 4
#define OS 5
/ {
    combos {
        compatible = "zmk,combos";
    };
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
   &none   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &none
   &none   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &none
   &none   &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &none
      &hm LCTRL ESC &hm LSHIFT TAB &lt NUM SPACE    &lt NAV BSPC  &hm LALT RET &hm LGUI DEL
            >;
        };
        colemakdh_layer {
            bindings = <
&trans  &kp Q  &kp W  &kp F  &kp P  &kp B    &kp J  &kp L   &kp U     &kp Y      &kp SEMI &trans
&trans  &kp A  &kp R  &kp S  &kp T  &kp G    &kp M  &kp N   &kp E     &kp I      &kp O    &trans
&trans  &kp Z  &kp X  &kp C  &kp D  &kp V    &kp K  &kp H   &trans    &trans     &trans   &trans
                   &trans  &trans  &trans    &trans    &trans     &trans
            >;
        };
        nav_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp PG_UP &kp HOME   &kp UP    &kp END    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PG_DN &kp LEFT   &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans     &trans    &trans     &trans  &trans
                        &trans  &trans  &lt SYM SPACE   &trans    &trans     &trans
            >;
        };
        number_layer {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4 &kp N5    &kp PLUS  &kp N7  &kp N8  &kp N9  &kp ASTRK  &trans
&trans  &kp N6  &kp N7  &kp N8  &kp N9 &kp N0    &kp MINUS &kp N4  &kp N5  &kp N6  &kp SLASH  &trans
&trans  &trans  &trans  &trans  &trans &trans    &kp COMMA &kp N1  &kp N2  &kp N3  &kp EQUAL  &trans
                        &trans  &trans  &trans    &lt SYM BSPC   &kp N0  &kp DOT
            >;
        };
        symbol_layer {
            bindings = <
&trans  &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &trans    &kp PLUS  &kp EQUAL &kp LBKT  &kp RBKT  &kp BSLH  &trans
&trans  &kp PRCNT  &kp CARET  &kp AMPS  &kp ASTRK &trans    &kp MINUS &kp DQT   &kp LPAR  &kp RPAR  &kp PIPE  &trans
&trans  &kp GRAVE  &kp LBRC   &kp RBRC  &kp TILDE &trans    &kp UNDER &kp APOS  &kp LT    &kp GT    &kp SLASH &trans
                              &trans    &trans    &trans    &trans    &trans    &trans
            >;
        };

        os_layer {
            bindings = <
&trans      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &trans           &trans        &trans             &trans             &trans       &tog COLEMAKDH
&trans      &kp F8        &kp F9        &kp F10       &kp F11       &kp F12         &trans           &trans        &trans             &kp C_VOLUME_UP    &trans       &tog GAME
&trans      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &trans           &trans        &trans             &trans             &trans       &trans
&trans      &kp F8        &kp F9        &kp F10       &kp F11       &kp F12         &trans           &trans        &trans             &kp C_VOLUME_UP    &trans       &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans           &trans        &kp C_PREVIOUS     &kp C_VOLUME_DOWN  &kp C_NEXT   &trans
                                        &trans     &trans        &trans          &kp C_PLAY_PAUSE &trans        &kp C_MUTE

            >;
        };
    };
};
